<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
             http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"	
             version="2.1">
	<persistence-unit name="pizza3el" transaction-type="RESOURCE_LOCAL">
		<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		<non-jta-data-source>java:comp/env/jdbc/mysql</non-jta-data-source>
		<class>cs636.pizza.domain.PizzaTopping</class>
		<class>cs636.pizza.domain.PizzaSize</class>
		<class>cs636.pizza.domain.MenuTopping</class>
		<class>cs636.pizza.domain.MenuSize</class>
		<class>cs636.pizza.domain.PizzaOrder</class>
		<!-- use @Cacheable on invariant entities to enable safe caching (in web case) -->
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
		<properties>
			<!-- using <non-jta-source>'s JNI name "java:comp/env/jdbc/mysql", JPA can look up 
		         a DataSource object held by tomcat, which has the url, user, password info 
		         that is configured at this spot for the client-server case -->
            <property name="eclipselink.jdbc.exclusive-connection.mode" value="Isolated"/>
            	
		  	<!-- To drop and replace existing schema this can be used. -->
            <!-- <property name="eclipselink.ddl-generation" value="drop-and-create-tables" />-->
            
			<!-- Configure simple SQL logging for demonstration. -->
            <property name="eclipselink.logging.level" value="FINE" />
            <property name="eclipselink.logging.thread" value="false" />
            <property name="eclipselink.logging.session" value="false" />
            <property name="eclipselink.logging.exceptions" value="false" />
            <property name="eclipselink.logging.timestamp" value="false" />
		</properties>
	</persistence-unit>
</persistence>
